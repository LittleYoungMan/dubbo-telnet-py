{
  "name": "Dubbo-telnet-py",
  "tagline": "使用python实现telnet调用dubbo",
  "body": "Dubbo Telnet Client of python\r\n=====================================  \r\n通过telnet调用Dubbo接口, 可用来做Dubbo的自动化测试。\r\n\r\n### 兼容性测试\r\n\r\n*  Python 2.6.6\r\n*  Python 2.7.10\r\n*  Python 3.4.3\r\n\r\n### 安装\r\n\r\n*  easyinstall安装 \r\n\r\n```shell\r\neasy_install dubbo_telnet\r\n```\r\n\r\n*  pip安装 \r\n\r\n```shell\r\npip install --upgrade dubbo_telnet\r\n```\r\n\r\n*  git安装  \r\n\r\n```shell\r\npip install --upgrade git+https://github.com/WALL-E/dubbo-telnet-py.git\r\n```\r\n\r\n### Example\r\n\r\n```python\r\n    import dubbo_telnet\r\n\r\n    Host = '192.168.1.203'  # Doubble服务器IP\r\n    Port = 28008  # Doubble服务端口\r\n\r\n    # 初始化dubbo对象\r\n    conn = dubbo_telnet.connect(Host, Port)\r\n\r\n    # 设置telnet连接超时时间\r\n    conn.set_connect_timeout(10)\r\n\r\n    # 设置dubbo服务返回响应的编码\r\n    conn.set_encoding('gbk')\r\n\r\n    interface = 'com.zrj.pay.trade.api.QueryTradeService'\r\n    method = 'tradeDetailQuery'\r\n    param = '{\"id\": 1}'\r\n    print conn.invoke(interface, method, param)\r\n\r\n    command = 'invoke com.zrj.pay.trade.api.QueryTradeService.tradeDetailQuery({\"id\":1})'\r\n    print conn.do(command)\r\n```\r\n\r\n### Dubbo Telnet命令\r\n\r\nDubbo2.0.5以上版本服务提供端口支持telnet命令，使用如下\r\n\r\n```shell\r\ntelnet localhost 20880\r\n```\r\n\r\n或者\r\n\r\n```shell\r\necho status | nc -i 1 localhost 20880\r\n```\r\n\r\n详见[Dubbo官方文档](http://dubbo.io/)\r\n\r\n\r\n### Todo\r\n\r\n* 使用pexpect替换telnetlib\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}